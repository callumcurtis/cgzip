#!/usr/bin/env bash

PASSED=0
FAILED=0
BEAT_STANDARD_COUNT=0
STANDARD_LEVEL=5

ALL_DIFFERENCES=""

while IFS= read -r filename; do
    ./install/bin/gzip < "$filename" > validate_temp.bin
    gzip -d < validate_temp.bin > validate_output_temp.txt
    diff -qs "$filename" validate_output_temp.txt > /dev/null

    if [ "$?" -ne "0" ]
    then
        printf "%-40s | %-6s\n" "$filename" "FAILED"
        FAILED=$(( FAILED + 1 ))
    else
        OLDSIZE=$(wc -c "$filename" | awk '{print $1}')
        NEWSIZE=$(wc -c validate_temp.bin | awk '{print $1}')
        STANDARDSIZE=$(gzip -$STANDARD_LEVEL -c "$filename" | wc -c)

        MYRATIO=$(awk -v old="$OLDSIZE" -v new="$NEWSIZE" 'BEGIN { printf "%.2f", 100 * old / new }')
        STANDARDRATIO=$(awk -v old="$OLDSIZE" -v standard="$STANDARDSIZE" 'BEGIN { printf "%.2f", 100 * old / standard }')

        DIFFERENCE=$(awk -v my="$MYRATIO" -v standard="$STANDARDRATIO" '
            BEGIN {
                if (standard == 0) {
                    printf "N/A"
                } else {
                    printf "%.2f", (my - standard) / standard * 100
                }
            }
        ')
        
        if awk -v my="$MYRATIO" -v standard="$STANDARDRATIO" 'BEGIN { exit !(my > standard) }'; then
            BEAT_STANDARD_COUNT=$(( BEAT_STANDARD_COUNT + 1 ))
        fi

        ALL_DIFFERENCES+="$DIFFERENCE "

        printf "%-40s | %-6s | compression ratio: %8s%% | compression ratio vs. standard gzip (level ${STANDARD_LEVEL}) (relative %%): %5s%%\n" \
            "${filename:0:37}" "PASSED" "$MYRATIO" "$DIFFERENCE"

        PASSED=$(( PASSED + 1 ))
    fi

    rm validate_output_temp.txt validate_temp.bin
done < <(find ./data -type f)

TOTAL=$(( PASSED + FAILED ))

echo "--------------------------------------------------------"
echo "${PASSED}/${TOTAL} passed, ${FAILED}/${TOTAL} failed."

echo "Custom compressor beat standard compressor (level ${STANDARD_LEVEL}): ${BEAT_STANDARD_COUNT}/${TOTAL} times."

if [ "$PASSED" -gt 0 ]; then
    echo "$ALL_DIFFERENCES" | awk '
    BEGIN {
        min =  1000000000000.0;
        max = -1000000000000.0;
        sum = 0.0;
        count = 0;
    }
    {
        for (i=1; i<=NF; i++) {
            diff = $i
            if (diff < min) {
                min = diff
            }
            if (diff > max) {
                max = diff
            }
            sum += diff
            count++
        }
    }
    END {
        if (count > 0) {
            average = sum / count
            printf "Compression Difference Stats (%%):\n"
            printf "  Minimum: %.2f%%\n", min
            printf "  Maximum: %.2f%%\n", max
            printf "  Average: %.2f%%\n", average
        }
    }'
fi
